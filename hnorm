#!/bin/bash

function cif_norm
{
	#header check
	file="$1"
	header_check=$(cat $1 | head -n 11 | tail -n 1)
	if [[ "$header_check" = "/* ************************************************************************** */" ]]
	then
		printf "\0";
		if [ -f auteur ]
		then
			user1=$(cat -n auteur | grep 1 | awk '{print $2}')
			user2=$(cat -n auteur | grep 2 | awk '{print $2}')
			user3=$(cat -n auteur | grep 3 | awk '{print $2}')
			user4=$(cat -n auteur | grep 4 | awk '{print $2}')
			user5=$(cat -n auteur | grep 5 | awk '{print $2}')
			user6=$(cat -n auteur | grep 6 | awk '{print $2}')
			in_auth=$(cat auteur | grep "$user")
			h_a_a=$(cat $1 | head -n 11 | grep "$user " | grep -v "$user1" | grep -v "$user3" | grep -v "$user3" | grep -v "$user4" | grep -v "$user5" | grep -v "$user6" | wc -l | awk '{print $1}')
		fi
		h_a=$(cat $1 | head -n 11 | grep "$user " | wc -l | awk '{print $1}')
		if [[ "$h_a" = "3" ]]
		then
			printf "\0";
		else
			if [[ "$h_a_a" -ne "0" || "$in_auth" = "" ]]
			then
				printf "\e[1;95m   AUTHOR NAME ERROR\e[0m\n";
				printf "\e[93m    If author is \"\e[96m$user\e[93m\", something may be wrong in the header...\e[0m\n";
				cat $1 | head -n 11 | grep "By: " | cut -c 2-47 | tr '*' ' ' | grep -v "$user" ;
				cat $1 | head -n 11 | grep "by " | cut -c 2-47 | tr '*' ' ' | grep -v "$user" ;
			else
				printf "\0";
			fi
		fi 2> /dev/null

		#filename_check
		file_check=$(cat $1 | head -n 4 | tail -n 1 | awk '{print $2}')
		if [[ "$file" != "$file_check" ]]
		then
			printf "\e[1;95m   FILENAME ERROR\e[0m\n";
			printf "\e[93m    You file is '\e[96m$file\e[93m', but your header calls it '\e[96m$file_check\e[93m'\e[0m ";
		else
			printf "\0";
		fi
	else
		printf "\e[1;95m   NO HEADER CORRECTLY PLACED\e[0m\n";
		printf "\e[93m    This file's 1st line is:\e[0m ";
		cat -e $1 | head -n 1 | awk '{gsub("\$", "\033[92m$\033[0m")}1';
	fi

	#line size
	cat $1 | sed 's/	/    /g'| grep -E "^.{81,}" > /dev/null 2> /dev/null && ( printf "\e[1;95m   MORE THAN 80 CHARS PER LINE\e[0m\n" && cat $1 | sed 's/	/    /g' | grep -nE "^.{81,}" | awk '{printf "    line ", gsub(/[ |	]+/," ")}1' );

	#function parameters
	cat $1 | grep "([a-zA-Z0-9 _*]*, [a-zA-Z0-9 _*]*, [a-zA-Z0-9 _*]*, [a-zA-Z0-9 _*]*," > /dev/null 2> /dev/null && ( printf "\e[1;95m   MORE THAN 4 PARAMETERS PER FUNCTION\e[0m\n" && cat $1 | grep -n "([a-zA-Z0-9 _*]*, [a-zA-Z0-9 _*]*, [a-zA-Z0-9 _*]*, [a-zA-Z0-9 _*]*," | awk '{printf "    line ", gsub(/[ |	]+/," ")}1' );

	#functions number
	num=$(printf `cat $1 | grep -x '{' | wc -l | awk '{print $1}'`)
	if [[ "$num" = "5" || "$num" = "4" || "$num" = "3" || "$num" = "2" || "$num" = "1" ]]
	then
		printf "\0";
	else
		printf "\e[1;95m   FUNCTIONS NUMBER\e[0m\e[91m is too damn high !\n";
		printf "\e[93m    $num functions in this file\e[0m\n";
		cat $1 | grep -w "int\|char\|void\|size_t\|t_size\|t_data\|t_set\|short\|long\|double\|float\|extern\|const\|static" | grep -v ";" | grep "(" | sed 's/(.*/()/g' | awk '{printf "     \033[33m", gsub(/[	]+/,"	\033[0m")}1';
	fi

	#instruction syntax[M#S
	cat $1 | grep " ;" | grep -v "return ;" | grep -v "break ;" | grep -v "continue ;" > /dev/null 2> /dev/null && ( printf "\e[1;95m   SPACE BEFORE INSTRUCTION END\e[0m\n" && cat $1 | grep -n " ;" | grep -v "return ;" | grep -v "break ;" | grep -v "continue ;" | awk '{printf "    line ", gsub(/[ |	]+/," ")}1' );

	#keywords syntax
	cat $1 | grep "if(\|else if(\|while(\|return\|sizeof" | grep -v "sizeof(" | grep -v "return (" | grep -v "return ;" > /dev/null 2> /dev/null && ( printf "\e[1;95m   KEYWORDS SPACING\e[0m\n" && cat $1 | grep -n "if(\|else if(\|while(\|return\|sizeof" | grep -v "sizeof(" | grep -v "return (" | grep -v "return ;" | awk '{printf "    line ", gsub(/[ |	]+/," "), gsub("sizeof", "\033[91msizeof\033[0m"), gsub("if", "\033[91mif\033[0m"), gsub("else if", "\033[91melse if\033[0m"), gsub("while", "\033[91mwhile\033[0m"), gsub("return", "\033[91mreturn\033[0m")}1' );

	#function syntax
	cat $1 | grep "[a-zA-Z0-9_]* (" | grep -v "[a-zA-Z0-9_](" | grep -v "if\|else if\|while\|return\|sizeof\|for\|case\|switch" | grep -v "= (\|< (\|> (\|/ (\|* (\|+ (\|- (\|% (\|| (\|& (" | grep -v "setup (\|exit (\|fork (\|read (\|write (\|open (\|close (\|waitpid (\|creat (\|link (\|unlink (\|execve (\|chdir (\|time (\|mknod (\|chmod (\|lchown (\|break (\|oldstat (\|lseek (\|getpid (\|mount (\|umount (\|setuid (\|getuid (\|stime (\|ptrace (\|alarm (\|oldfstat (\|pause (\|utime (\|stty (\|gtty (\|access (\|nice (\|ftime (\|sync (\|kill (\|rename (\|mkdir (\|rmdir (\|dup (\|pipe (\|times (\|prof (\|brk (\|setgid (\|getgid (\|signal (\|geteuid (\|getegid (\|acct (\|umount2 (\|lock (\|ioctl (\|fcntl (\|mpx (\|setpgid (\|ulimit (\|oldolduname (\|umask (\|chroot (\|ustat (\|dup2 (\|getppid (\|getpgrp (\|setsid (\|sigaction (\|sgetmask (\|ssetmask (\|setreuid (\|setregid (\|sigsuspend (\|sigpending (\|sethostname (\|setrlimit (\|getrlimit (\|getrusage (\|gettimeofday (\|settimeofday (\|getgroups (\|setgroups (\|select (\|symlink (\|oldlstat (\|readlink (\|uselib (\|swapon (\|reboot (\|readdir (\|mmap (\|munmap (\|truncate (\|ftruncate (\|fchmod (\|fchown (\|getpriority (\|setpriority (\|profil (\|statfs (\|fstatfs (\|ioperm (\|socketcall (\|syslog (\|setitimer (\|getitimer (\|stat (\|lstat (\|fstat (\|olduname (\|iopl (\|vhangup (\|idle (\|vm86old (\|wait4 (\|swapoff (\|sysinfo (\|ipc (\|fsync (\|sigreturn (\|clone (\|setdomainname (\|uname (\|modify_ldt (\|adjtimex (\|mprotect (\|sigprocmask (\|create_module (\|init_module (\|delete_module (\|get_kernel_syms (\|quotactl (\|getpgid (\|fchdir (\|bdflush (\|sysfs (\|personality (\|afs_syscall (\|setfsuid (\|setfsgid (\|_llseek (\|getdents (\|_newselect (\|flock (\|msync (\|readv (\|writev (\|getsid (\|fdatasync (\|_sysctl (\|mlock (\|munlock (\|mlockall (\|munlockall (\|sched_setparam (\|sched_getparam (\|sched_setscheduler (\|sched_getscheduler (\|sched_yield (\|sched_get_priority_max (\|sched_get_priority_min (\|sched_rr_get_interval (\|nanosleep (\|mremap (\|setresuid (\|getresuid (\|vm86 (\|query_module (\|poll (\|nfsservctl (\|setresgid (\|getresgid (\|prctl (\|rt_sigreturn (\|rt_sigaction (\|rt_sigprocmask (\|rt_sigpending (\|rt_sigtimedwait (\|rt_sigqueueinfo (\|rt_sigsuspend (\|pread (\|pwrite (\|chown (\|getcwd (\|capget (\|capset (\|sigaltstack (\|sendfile (\|getpmsg (\|putpmsg (\|vfork (" > /dev/null 2>&1 && ( printf "\e[1;95m   FUNCTIONS SYNTAX\e[0m \e[93m(but you better check it by yourself MOFO !)\e[0m\n" && cat $1 | grep -n "[a-zA-Z0-9_]* (" | grep -v "[a-zA-Z0-9_](" | grep -v "if\|else if\|while\|return\|sizeof\|for\|case\|switch" | grep -v "= (\|< (\|> (\|/ (\|* (\|+ (\|- (\|% (\|| (\|& (" | grep -v "setup (\|exit (\|fork (\|read (\|write (\|open (\|close (\|waitpid (\|creat (\|link (\|unlink (\|execve (\|chdir (\|time (\|mknod (\|chmod (\|lchown (\|break (\|oldstat (\|lseek (\|getpid (\|mount (\|umount (\|setuid (\|getuid (\|stime (\|ptrace (\|alarm (\|oldfstat (\|pause (\|utime (\|stty (\|gtty (\|access (\|nice (\|ftime (\|sync (\|kill (\|rename (\|mkdir (\|rmdir (\|dup (\|pipe (\|times (\|prof (\|brk (\|setgid (\|getgid (\|signal (\|geteuid (\|getegid (\|acct (\|umount2 (\|lock (\|ioctl (\|fcntl (\|mpx (\|setpgid (\|ulimit (\|oldolduname (\|umask (\|chroot (\|ustat (\|dup2 (\|getppid (\|getpgrp (\|setsid (\|sigaction (\|sgetmask (\|ssetmask (\|setreuid (\|setregid (\|sigsuspend (\|sigpending (\|sethostname (\|setrlimit (\|getrlimit (\|getrusage (\|gettimeofday (\|settimeofday (\|getgroups (\|setgroups (\|select (\|symlink (\|oldlstat (\|readlink (\|uselib (\|swapon (\|reboot (\|readdir (\|mmap (\|munmap (\|truncate (\|ftruncate (\|fchmod (\|fchown (\|getpriority (\|setpriority (\|profil (\|statfs (\|fstatfs (\|ioperm (\|socketcall (\|syslog (\|setitimer (\|getitimer (\|stat (\|lstat (\|fstat (\|olduname (\|iopl (\|vhangup (\|idle (\|vm86old (\|wait4 (\|swapoff (\|sysinfo (\|ipc (\|fsync (\|sigreturn (\|clone (\|setdomainname (\|uname (\|modify_ldt (\|adjtimex (\|mprotect (\|sigprocmask (\|create_module (\|init_module (\|delete_module (\|get_kernel_syms (\|quotactl (\|getpgid (\|fchdir (\|bdflush (\|sysfs (\|personality (\|afs_syscall (\|setfsuid (\|setfsgid (\|_llseek (\|getdents (\|_newselect (\|flock (\|msync (\|readv (\|writev (\|getsid (\|fdatasync (\|_sysctl (\|mlock (\|munlock (\|mlockall (\|munlockall (\|sched_setparam (\|sched_getparam (\|sched_setscheduler (\|sched_getscheduler (\|sched_yield (\|sched_get_priority_max (\|sched_get_priority_min (\|sched_rr_get_interval (\|nanosleep (\|mremap (\|setresuid (\|getresuid (\|vm86 (\|query_module (\|poll (\|nfsservctl (\|setresgid (\|getresgid (\|prctl (\|rt_sigreturn (\|rt_sigaction (\|rt_sigprocmask (\|rt_sigpending (\|rt_sigtimedwait (\|rt_sigqueueinfo (\|rt_sigsuspend (\|pread (\|pwrite (\|chown (\|getcwd (\|capget (\|capset (\|sigaltstack (\|sendfile (\|getpmsg (\|putpmsg (\|vfork (" | awk '{printf "    line ", gsub(/[ |	]+/," ")}1' );

	#system calls syntax
	cat $1 | grep "setup (\|exit (\|fork (\|read (\|write (\|open (\|close (\|waitpid (\|creat (\|link (\|unlink (\|execve (\|chdir (\|time (\|mknod (\|chmod (\|lchown (\|break (\|oldstat (\|lseek (\|getpid (\|mount (\|umount (\|setuid (\|getuid (\|stime (\|ptrace (\|alarm (\|oldfstat (\|pause (\|utime (\|stty (\|gtty (\|access (\|nice (\|ftime (\|sync (\|kill (\|rename (\|mkdir (\|rmdir (\|dup (\|pipe (\|times (\|prof (\|brk (\|setgid (\|getgid (\|signal (\|geteuid (\|getegid (\|acct (\|umount2 (\|lock (\|ioctl (\|fcntl (\|mpx (\|setpgid (\|ulimit (\|oldolduname (\|umask (\|chroot (\|ustat (\|dup2 (\|getppid (\|getpgrp (\|setsid (\|sigaction (\|sgetmask (\|ssetmask (\|setreuid (\|setregid (\|sigsuspend (\|sigpending (\|sethostname (\|setrlimit (\|getrlimit (\|getrusage (\|gettimeofday (\|settimeofday (\|getgroups (\|setgroups (\|select (\|symlink (\|oldlstat (\|readlink (\|uselib (\|swapon (\|reboot (\|readdir (\|mmap (\|munmap (\|truncate (\|ftruncate (\|fchmod (\|fchown (\|getpriority (\|setpriority (\|profil (\|statfs (\|fstatfs (\|ioperm (\|socketcall (\|syslog (\|setitimer (\|getitimer (\|stat (\|lstat (\|fstat (\|olduname (\|iopl (\|vhangup (\|idle (\|vm86old (\|wait4 (\|swapoff (\|sysinfo (\|ipc (\|fsync (\|sigreturn (\|clone (\|setdomainname (\|uname (\|modify_ldt (\|adjtimex (\|mprotect (\|sigprocmask (\|create_module (\|init_module (\|delete_module (\|get_kernel_syms (\|quotactl (\|getpgid (\|fchdir (\|bdflush (\|sysfs (\|personality (\|afs_syscall (\|setfsuid (\|setfsgid (\|_llseek (\|getdents (\|_newselect (\|flock (\|msync (\|readv (\|writev (\|getsid (\|fdatasync (\|_sysctl (\|mlock (\|munlock (\|mlockall (\|munlockall (\|sched_setparam (\|sched_getparam (\|sched_setscheduler (\|sched_getscheduler (\|sched_yield (\|sched_get_priority_max (\|sched_get_priority_min (\|sched_rr_get_interval (\|nanosleep (\|mremap (\|setresuid (\|getresuid (\|vm86 (\|query_module (\|poll (\|nfsservctl (\|setresgid (\|getresgid (\|prctl (\|rt_sigreturn (\|rt_sigaction (\|rt_sigprocmask (\|rt_sigpending (\|rt_sigtimedwait (\|rt_sigqueueinfo (\|rt_sigsuspend (\|pread (\|pwrite (\|chown (\|getcwd (\|capget (\|capset (\|sigaltstack (\|sendfile (\|getpmsg (\|putpmsg (\|vfork (" | grep -v "setup(\|exit(\|fork(\|read(\|write(\|open(\|close(\|waitpid(\|creat(\|link(\|unlink(\|execve(\|chdir(\|time(\|mknod(\|chmod(\|lchown(\|break(\|oldstat(\|lseek(\|getpid(\|mount(\|umount(\|setuid(\|getuid(\|stime(\|ptrace(\|alarm(\|oldfstat(\|pause(\|utime(\|stty(\|gtty(\|access(\|nice(\|ftime(\|sync(\|kill(\|rename(\|mkdir(\|rmdir(\|dup(\|pipe(\|times(\|prof(\|brk(\|setgid(\|getgid(\|signal(\|geteuid(\|getegid(\|acct(\|umount2(\|lock(\|ioctl(\|fcntl(\|mpx(\|setpgid(\|ulimit(\|oldolduname(\|umask(\|chroot(\|ustat(\|dup2(\|getppid(\|getpgrp(\|setsid(\|sigaction(\|sgetmask(\|ssetmask(\|setreuid(\|setregid(\|sigsuspend(\|sigpending(\|sethostname(\|setrlimit(\|getrlimit(\|getrusage(\|gettimeofday(\|settimeofday(\|getgroups(\|setgroups(\|select(\|symlink(\|oldlstat(\|readlink(\|uselib(\|swapon(\|reboot(\|readdir(\|mmap(\|munmap(\|truncate(\|ftruncate(\|fchmod(\|fchown(\|getpriority(\|setpriority(\|profil(\|statfs(\|fstatfs(\|ioperm(\|socketcall(\|syslog(\|setitimer(\|getitimer(\|stat(\|lstat(\|fstat(\|olduname(\|iopl(\|vhangup(\|idle(\|vm86old(\|wait4(\|swapoff(\|sysinfo(\|ipc(\|fsync(\|sigreturn(\|clone(\|setdomainname(\|uname(\|modify_ldt(\|adjtimex(\|mprotect(\|sigprocmask(\|create_module(\|init_module(\|delete_module(\|get_kernel_syms(\|quotactl(\|getpgid(\|fchdir(\|bdflush(\|sysfs(\|personality(\|afs_syscall(\|setfsuid(\|setfsgid(\|_llseek(\|getdents(\|_newselect(\|flock(\|msync(\|readv(\|writev(\|getsid(\|fdatasync(\|_sysctl(\|mlock(\|munlock(\|mlockall(\|munlockall(\|sched_setparam(\|sched_getparam(\|sched_setscheduler(\|sched_getscheduler(\|sched_yield(\|sched_get_priority_max(\|sched_get_priority_min(\|sched_rr_get_interval(\|nanosleep(\|mremap(\|setresuid(\|getresuid(\|vm86(\|query_module(\|poll(\|nfsservctl(\|setresgid(\|getresgid(\|prctl(\|rt_sigreturn(\|rt_sigaction(\|rt_sigprocmask(\|rt_sigpending(\|rt_sigtimedwait(\|rt_sigqueueinfo(\|rt_sigsuspend(\|pread(\|pwrite(\|chown(\|getcwd(\|capget(\|capset(\|sigaltstack(\|sendfile(\|getpmsg(\|putpmsg(\|vfork(" > /dev/null 2> /dev/null && ( printf "\e[1;95m   SYSTEM CALLS SYNTAX\e[0m\n" && cat $1 | grep -n "setup (\|exit (\|fork (\|read (\|write (\|open (\|close (\|waitpid (\|creat (\|link (\|unlink (\|execve (\|chdir (\|time (\|mknod (\|chmod (\|lchown (\|break (\|oldstat (\|lseek (\|getpid (\|mount (\|umount (\|setuid (\|getuid (\|stime (\|ptrace (\|alarm (\|oldfstat (\|pause (\|utime (\|stty (\|gtty (\|access (\|nice (\|ftime (\|sync (\|kill (\|rename (\|mkdir (\|rmdir (\|dup (\|pipe (\|times (\|prof (\|brk (\|setgid (\|getgid (\|signal (\|geteuid (\|getegid (\|acct (\|umount2 (\|lock (\|ioctl (\|fcntl (\|mpx (\|setpgid (\|ulimit (\|oldolduname (\|umask (\|chroot (\|ustat (\|dup2 (\|getppid (\|getpgrp (\|setsid (\|sigaction (\|sgetmask (\|ssetmask (\|setreuid (\|setregid (\|sigsuspend (\|sigpending (\|sethostname (\|setrlimit (\|getrlimit (\|getrusage (\|gettimeofday (\|settimeofday (\|getgroups (\|setgroups (\|select (\|symlink (\|oldlstat (\|readlink (\|uselib (\|swapon (\|reboot (\|readdir (\|mmap (\|munmap (\|truncate (\|ftruncate (\|fchmod (\|fchown (\|getpriority (\|setpriority (\|profil (\|statfs (\|fstatfs (\|ioperm (\|socketcall (\|syslog (\|setitimer (\|getitimer (\|stat (\|lstat (\|fstat (\|olduname (\|iopl (\|vhangup (\|idle (\|vm86old (\|wait4 (\|swapoff (\|sysinfo (\|ipc (\|fsync (\|sigreturn (\|clone (\|setdomainname (\|uname (\|modify_ldt (\|adjtimex (\|mprotect (\|sigprocmask (\|create_module (\|init_module (\|delete_module (\|get_kernel_syms (\|quotactl (\|getpgid (\|fchdir (\|bdflush (\|sysfs (\|personality (\|afs_syscall (\|setfsuid (\|setfsgid (\|_llseek (\|getdents (\|_newselect (\|flock (\|msync (\|readv (\|writev (\|getsid (\|fdatasync (\|_sysctl (\|mlock (\|munlock (\|mlockall (\|munlockall (\|sched_setparam (\|sched_getparam (\|sched_setscheduler (\|sched_getscheduler (\|sched_yield (\|sched_get_priority_max (\|sched_get_priority_min (\|sched_rr_get_interval (\|nanosleep (\|mremap (\|setresuid (\|getresuid (\|vm86 (\|query_module (\|poll (\|nfsservctl (\|setresgid (\|getresgid (\|prctl (\|rt_sigreturn (\|rt_sigaction (\|rt_sigprocmask (\|rt_sigpending (\|rt_sigtimedwait (\|rt_sigqueueinfo (\|rt_sigsuspend (\|pread (\|pwrite (\|chown (\|getcwd (\|capget (\|capset (\|sigaltstack (\|sendfile (\|getpmsg (\|putpmsg (\|vfork (" | grep -v "setup(\|exit(\|fork(\|read(\|write(\|open(\|close(\|waitpid(\|creat(\|link(\|unlink(\|execve(\|chdir(\|time(\|mknod(\|chmod(\|lchown(\|break(\|oldstat(\|lseek(\|getpid(\|mount(\|umount(\|setuid(\|getuid(\|stime(\|ptrace(\|alarm(\|oldfstat(\|pause(\|utime(\|stty(\|gtty(\|access(\|nice(\|ftime(\|sync(\|kill(\|rename(\|mkdir(\|rmdir(\|dup(\|pipe(\|times(\|prof(\|brk(\|setgid(\|getgid(\|signal(\|geteuid(\|getegid(\|acct(\|umount2(\|lock(\|ioctl(\|fcntl(\|mpx(\|setpgid(\|ulimit(\|oldolduname(\|umask(\|chroot(\|ustat(\|dup2(\|getppid(\|getpgrp(\|setsid(\|sigaction(\|sgetmask(\|ssetmask(\|setreuid(\|setregid(\|sigsuspend(\|sigpending(\|sethostname(\|setrlimit(\|getrlimit(\|getrusage(\|gettimeofday(\|settimeofday(\|getgroups(\|setgroups(\|select(\|symlink(\|oldlstat(\|readlink(\|uselib(\|swapon(\|reboot(\|readdir(\|mmap(\|munmap(\|truncate(\|ftruncate(\|fchmod(\|fchown(\|getpriority(\|setpriority(\|profil(\|statfs(\|fstatfs(\|ioperm(\|socketcall(\|syslog(\|setitimer(\|getitimer(\|stat(\|lstat(\|fstat(\|olduname(\|iopl(\|vhangup(\|idle(\|vm86old(\|wait4(\|swapoff(\|sysinfo(\|ipc(\|fsync(\|sigreturn(\|clone(\|setdomainname(\|uname(\|modify_ldt(\|adjtimex(\|mprotect(\|sigprocmask(\|create_module(\|init_module(\|delete_module(\|get_kernel_syms(\|quotactl(\|getpgid(\|fchdir(\|bdflush(\|sysfs(\|personality(\|afs_syscall(\|setfsuid(\|setfsgid(\|_llseek(\|getdents(\|_newselect(\|flock(\|msync(\|readv(\|writev(\|getsid(\|fdatasync(\|_sysctl(\|mlock(\|munlock(\|mlockall(\|munlockall(\|sched_setparam(\|sched_getparam(\|sched_setscheduler(\|sched_getscheduler(\|sched_yield(\|sched_get_priority_max(\|sched_get_priority_min(\|sched_rr_get_interval(\|nanosleep(\|mremap(\|setresuid(\|getresuid(\|vm86(\|query_module(\|poll(\|nfsservctl(\|setresgid(\|getresgid(\|prctl(\|rt_sigreturn(\|rt_sigaction(\|rt_sigprocmask(\|rt_sigpending(\|rt_sigtimedwait(\|rt_sigqueueinfo(\|rt_sigsuspend(\|pread(\|pwrite(\|chown(\|getcwd(\|capget(\|capset(\|sigaltstack(\|sendfile(\|getpmsg(\|putpmsg(\|vfork(" | awk '{printf "    line ", gsub(/[ |	]+/," ")}1' );

	#malloc cast
	cat $1 | grep "= malloc" > /dev/null 2> /dev/null && ( printf "\e[1;95m   MALLOC NOT CAST\e[0m\e[91m you fool !\e[0m\n" && cat $1 | grep -n "= malloc" | awk '{printf "    line ", gsub(/[ |	]+/," ")}1' );

	#illegal comments
	cat $1 | grep "//" > /dev/null 2> /dev/null && ( printf "\e[1;95m   C++ COMMENTS\e[0m\n" && cat $1 | grep -n "//" | awk '{printf "    line ", gsub(/[ |	]+/," ")}1' );

	#variable decalration
	cat $1 | grep -w "int\|char\|void\|size_t\|t_size\|t_data\|t_set\|short\|long\|double\|float\|extern\|const" | grep "=" | grep -v "static" | grep -v "malloc" | grep -v "\[" | grep -v "{" | grep -v "(\|)" > /dev/null 2> /dev/null && ( printf "\e[1m" && printf "\e[1;95m   ONE LINE DECLARATION\e[0m\n" && cat $1 | grep -wn "int\|char\|void\|size_t\|t_size\|t_data\|t_set\|short\|long\|double\|float\|extern\|const" | grep "=" | grep -v "static" | grep -v "malloc" | grep -v "\[" | grep -v "{\|}" | grep -v "(\|)" | awk '{printf "    line ", gsub(/[ |	]+/," ")}1' );

	#space @ NewLine
	cat $1 | grep -v '[a-z{}]' | grep -w " $" > /dev/null 2> /dev/null && ( printf "\e[1;95m   SPACE ON AN EMPTY LINE\e[0m\n" && cat $1 | grep -nv '[a-z{}]' | grep -w " $" | awk '{printf "    line ", gsub(" ", "\033[32m~\033[0m"), gsub("$", "\033[91m$\033[0m")}1' );

	#space @ EOL
	cat $1 | grep '[a-z{}]' | grep -w " $" > /dev/null 2> /dev/null && ( printf "\e[1;95m   SPACE AT END OF LINE\e[0m\n" && cat $1 | grep -n '[a-z{}]' | grep -w " $" | awk '{printf "    line ", gsub(/[ ]+/, " "), gsub("$", "\033[91m$\033[0m")}1' );

	#tab @ NewLine
	cat $1 | grep -v '[a-z{}]' | grep -w "	$" > /dev/null 2> /dev/null && ( printf "\e[1;95m   TAB ON AN EMPTY LINE\e[0m\n" && cat $1 | grep -nv '[a-z{}]' | grep -w "	$" | awk '{printf "    line ", gsub("	", "\033[32m>--\033[0m"), gsub("$", "\033[91m$\033[0m")}1' );

	#tab @ EOL
	cat $1 | grep '[a-z{}]' | grep -w "	$" > /dev/null 2> /dev/null && ( printf "\e[1;95m   TAB AT END OF LINE\e[0m\n" && cat $1 | grep -n '[a-z{}]' | grep -w "	$" | awk '{printf "    line ", gsub(/[	]+/, "	"), gsub("$", "\033[91m$\033[0m")}1' );
	#functions indent

}

function global_C_check
{
	if [ "$1" = "check" ]
	then
		if [[ `ls *.c 2> /dev/null` = "" ]]
		then
			return;
		else
			for f in *.c
			do
				cif_norm $f;
			done
		fi
	else
		for f in *.c
		do
			if [[ $(cif_norm $f) = "" ]]
			then
				printf "\r";
			else
				printf "  \033[1;91;4m"
				printf "$f" | awk '{printf toupper($0)}';
				printf "\033[0m:\n"
				cif_norm $f;
			fi
		done
	fi
}

function norm_check
{
	printf "*\e[96mNORM *.c\e[0m                 [  ..  ]  (\033[96m`pwd`\033[0m)";
	if [[ $(global_C_check "check") = "" ]]
	then
		printf "\r\e[92m*\e[0m\e[96mNORM *.c\e[0m                 [  \e[92mOK\e[0m  ]  (\033[96m`pwd`\033[0m)\n";
	else
		printf "\r\e[91m*\e[0m\e[96mNORM *.c\e[0m                 [  \e[91mKO\e[0m  ]  (\033[96m`pwd`\033[0m)\n";
		global_C_check "display";
	fi
	printf "\n";
}

function cif_cheat
{
	for file in *.*;
	do
		cat $file | grep -w "<stdio.h>\|printf(\|scanf(\|puts(\|putc(\|gets(\|getc(\|system(" | grep -v "tputs(" > /dev/null 2> /dev/null && ( printf "\e[33m  $file\e[0m:\n\e[0m" && cat $file | grep -n "<stdio.h>\|printf(\|scanf(\|puts(\|putc(\|gets(\|getc(\|system(" | grep -v "tputs(" | awk '{printf "   line ", gsub(/[ |	]+/," ")}1' );
	done 2> /dev/null
}

function cheat_check
{
	if [ -d src* ]
	then
		cd src*;
	fi
	printf "*\e[96mFORBIDDEN\e[0m                [  ..  ]";
	if [[ $(cif_cheat) = "" ]]
	then
		printf "\r\e[92m*\e[0m\e[96mFORBIDDEN\e[0m                [\e[92m  OK  \e[0m]\n";
	else
		printf "\r\e[93m*\e[0m\e[96mFORBIDDEN\e[0m                [\e[93m WARN \e[0m]\n";
		cif_cheat;
	fi
	printf "\n";
	norm_check;
}

function make_check
{
	printf "*\e[96mCOMPILE\e[0m                  [  ..  ]"
	make re > /dev/null 2> /dev/null &&
		(printf "\r\e[92m*\e[0m\e[96mCOMPILE\e[0m                  [\e[92m  OK  \e[0m]\n" && make fclean > /dev/null 2> /dev/null) ||
		(printf "\r\e[91m*\e[0m\e[96mCOMPILE\e[0m                  [\e[91m  KO  \e[0m]\n" && make fclean > /dev/null 2> /dev/null);
	printf "\n";
	cheat_check;
}

function auth_check
{
	printf "*\e[96mAUTHOR FILE\e[0m              [  ..  ]";
	if [ -d src* ]
	then
		cd src*;
		if [ -f ../auteur ]
		then
			cp ../auteur .;
		fi
		if [ `ls -1 | grep -w auteur | wc -l | awk '{print $1}'` = "1" ]
		then
			if [[ `cat -e auteur | grep $user` = `echo "$user$"` ]]
			then
				printf "\r\e[92m*\e[0m\e[96mAUTHOR FILE\e[0m              [\e[92m  OK  \e[0m]  (\e[96m$user\e[0m)\n";
			else
				printf "\r\e[91m*\e[0m\e[96mAUTHOR FILE\e[0m              [\e[91m  KO  \e[0m]  (\e[91mAuthor name fail\e[0m)\n";
			fi
			rm ./auteur;
			cd ..;
		else
			printf "\r\e[91m*\e[0m\e[96mAUTHOR FILE\e[0m              [\e[91m  KO  \e[0m]  (\e[91mNo author file\e[0m)\n";
		fi
	else
		if [ `ls -1 | grep -w auteur | wc -l | awk '{print $1}'` = "1" ]
		then
			if [[ `cat -e auteur | grep $user` = `echo "$user$"` ]]
			then
				printf "\r\e[92m*\e[0m\e[96mAUTHOR FILE\e[0m              [\e[92m  OK  \e[0m]  (\e[96m$user\e[0m)\n";
			else
				printf "\r\e[91m*\e[0m\e[96mAUTHOR FILE\e[0m              [\e[91m  KO  \e[0m]  (\e[91mAuthor name fail\e[0m)\n";
			fi
		else
			printf "\r\e[91m*\e[0m\e[96mAUTHOR FILE\e[0m              [\e[91m  KO  \e[0m]  (\e[91mNo author file\e[0m)\n";
		fi
	fi
	printf "\n";
	make_check;
}

function dir_check
{
	dir=$1;
	if [ "$dir" = "" ]
	then
		dir=".";
		auth_check;
	else
		if [ ! -d $dir ]
		then
			help_menu;
		else
			cd $dir;
			auth_check;
		fi
	fi
}

function download_update
{
	printf " UPDATE\n\n"
}

function help_menu
{
	clear
	printf "**********************************\n* ";
	printf "\e[1mHoney_Badger's Program Checker\e[0m *\n";
	printf "**********************************\n";
	if [[ "$is_connected" = "" ]]
	then
		printf "\n";
	else
		if [[ "$off_ver" = "" ]]
		then
			printf "\n";
		else
			printf "\e[92mUpdate available\e[0m\n\n";
		fi
	fi
	printf "Usage: \e[91mhnorm\e[0m \e[1;95m[ \e[96m-h\e[0m | \e[92m-D\e[0m | \e[93m-u\e[0m <user> \e[35m[\e[0m<dir>\e[35m]\e[0m \e[1;95m]\e[0m\n\n";
	printf "\e[4mExamples\e[0m:\n";
	printf "  \e[96mhnorm -h\e[0m               -> display help\n";
	printf "  \e[92mhnorm -D\e[0m               -> Download and install hnorm's update (ask rbobillo for more information)\n";
	printf "  \e[93mhnorm\e[0m                  -> check the norm in current <dir>\n";
	printf "  \e[93mhnorm\e[0m <dir>            -> check the norm in selected <dir>\n";
	printf "  \e[93mhnorm -u\e[0m <user>        -> check the norm for the selected <user>\n";
	printf "  \e[93mhnorm -u\e[0m <user> <dir>  -> check the norm for the selected <user>, in the selected <dir>\n\n";
	return;
}

function main
{
	is_connected=$(ifconfig | grep "inet addr" | grep -v "127.0.0.1")
	cur_ver="v.0.6"
	off_ver=$(curl -s https://github.com/HoneyBadger42/HBPC | grep "HBPC v" | grep -v "$cur_ver")
	clear
	printf "**********************************\n* ";
	printf "\e[1mHoney_Badger's Program Checker\e[0m *\n";
	printf "**********************************\n";
	if [[ "$is_connected" = "" ]]
	then
		printf "\n";
	else
		if [[ "$off_ver" = "" ]]
		then
			printf "\n";
		else
			printf "\e[92mUpdate available\e[0m\n\n";
		fi
	fi
	if [[ "$1" == "-h" || "$1" == "-D" || "$1" == "-u" ]]
	then
		while getopts "hDu:" OPTION
		do
			case $OPTION in
				h) help_menu ; exit 0;;
				D) download_update ; exit 0;;
				u) if [[ "$OPTARG" != "-h" && "$OPTARG" != "-D" && "$OPTARG" != "-u" && "$OPTARG" == ${@: -1} ]]
				then
					user=$OPTARG;
					dir_check .;
				elif [[ "$OPTARG" != "-h" && "$OPTARG" != "-D" && "$OPTARG" != "-u"  && "$OPTARG" != "${@: -1}" ]]
				then
					user=$OPTARG;
					dir_check ${@: -1};
				else
					printf " Please enter a correct user name\n\n";
					exit 1;
				fi ;;
				\?) help_menu ; exit 1;;
			esac
		done
	else
		user=`whoami`
		if [ $# = 1 ]
		then
			dir_check $1;
		else
			dir_check ${@: -1};
		fi
	fi
}

main $@;
